Rectangle :: struct {

    width:  int64;
    height: int64;

    new :: (self, width: int64, height: int64) -> Rectangle { // Delcaring a function named "new" will override the default constructor
                                                              // This function will be static despite it having "self" in it's parameter list

        self.width  = width;
        self.height = height;

        return self;

    }

    area :: (self) -> int64 { // Function must have "self" in it's parameter list to be non-static

        return self.width * self.height;

    }

}

main :: ( args: [] str ) -> int16 {

    rect: Rectangle = Rectangle.new(10, 15);

    x: str = "Hello world!";

    print(x ++ "\n"); // ++ is the array AND string concact operator

    print("{rect.area()}\n");

    return 0;

}