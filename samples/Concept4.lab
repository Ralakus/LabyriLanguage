Rectangle :: struct {

    width:  int64;
    height: int64;

    new :: (width: int64, height: int64) -> Rectangle {

        temp_rect: Rectangle; // Struct members are automagically initilized with default values
                              // 0 for int64

        Rectangle.width  = width;
        Rectangle.height = height;

        return temp_rect;

    }

    area :: (self) -> int64 { // Function must have "self" in it's parameter list to be non-static

        return self.width * self.height;

    }

}

main :: ( args: [] str ) -> int16 {

    rect: Rectangle = Rectangle.new(10, 15);

    x: str = "Hello world!";

    print(x ++ "\n"); // ++ is the array AND string concact operator

    print("{rect.area()}\n");

    return 0;

}